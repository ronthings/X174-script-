###### Summary ######

## Good news:
- There appears to be a set of strictly alternating mutations. (But unfortunately there is one exception - next section).
- There is just 1 mutation relative to the ancestor for the C-adapted phage, perhaps as expected (because it is normally grown on C)
- But there are 6 mutations in the S-adapted phage (some of these are fixations, some polymorphisms).
- Cool observation: the list of alternating mutations does not overlap with Crill et al.!!

## Bad news and further observations so far:
- S1 is a suspicious sample and matches the C pattern unlike all other S's I examined. (It also has high coverage (~26k)).
- How can we explain its following the phenotypic effect but having the opposite pattern?
- "Undetermined" seems to have decent (~9k) coverage.
- Coverage of the C host genome is poor for all S-adapted phage
- This makes me think that you prepared the phage (with chloramphenicol) on their host of last adaptation?
- The poor coverage of the C host on S-adapted samples includes S1...
- So could an error have occurred prior to DNA prep?
- Can we think of any other explanations? We should explore the data carefully.
- Coverage of the host genome is intermediate for the undetermined sample, suggesting multiple samples inputting.

I will share strategic thoughts on what we can do about the S1 conundrum. Sanger sequencing of phage stock would be wise. (We wanted to do this anyway).

# Procedural notes
- SCSC10 has the same name for each duplicate in the sample sheet
- So we need to manually adjust name before first _ (maybe SCSC10A, SCSC10B) before running the initial scripts.
- We may need to clean up and use the Salmonella genome. The simplest way to do this would be to create two completely different directory structures.
- Would you like to try automating the steps below also? Or whatever approach is most straightforward to generate an overall summary table...

###### FreeBayes Notes ######

## Literature
# First, this reference is really helpful:
https://nekrut.github.io/BMMB554/post/topic9/
# The section on VCF filtering in particular is excellent.

# We must also read the FreeBayes manual carefully:
https://github.com/ekg/freebayes

## Procedure
# Now let's make the directory for VCF files to go in
# mkdir VCF

# Now the key FreeBayes command:
freebayes --fasta-reference FASTA/reference.fasta --pooled-continuous \
--min-alternate-fraction 0.01 --min-alternate-count 1 \
--min-mapping-quality 20 --min-base-quality 30 \
--no-indels --no-mnps --no-complex MAP/A_phixmapped.bam > VCF/A_phix.vcf

# I notice that FreeBayes itself left aligns indels by default.
# I notice that Nekrutenko sets pooled discrete with ploidy=1.
# This seems to be in conflict with pooled discrete to me.

# Now it's time to filter the FreeBayes output (better to do this as a discrete step and we can use a program from vcflib):
# conda install vcflib # if not already installed
vcffilter -f "SRP > 20" -f "SAP > 20" -f "EPP > 20" -f "QUAL > 30" -f "DP > 30" VCF/A_phix.vcf > VCF/A_phix_filtered.vcf

# This filter (based on Nekrutenko reference above) is quite stringent. For example 1460 was rejected for placement bias but it looks pretty solid on IGV.
# After looking about a bit I see patterns that are rejected by this filter - incorrectly in my view.
# Paradoxically, the false negative rate may be increased by high coverage...

# Time to tabulate our data so it is human-readable.
# Here's a simple approach (again using a vcflib program):
vcf2tsv VCF/A_phix.vcf > VCF/A_phix.tsv

# You can render the output file off-the-bat in Excel or in Atom if you have this excellent package installed:
https://atom.io/packages/tablr

# For a table with genome-context and biological effect, we can use my vcf-codon-table script from GitHub.
# Pre-requisites:
## We need to be in an environment with python3 (maybe move to your root conda environment).
## We need to put the phix_coord.txt information into the FASTA/ reference folder.

# Now we are ready:
./vcf_parser.py FASTA/phix_AF176034.fasta FASTA/phix_coord.txt VCF/A_phix.vcf VCF/A_table.tsv

# This table can also be read in Excel or Atom, and eventually rendered in our manuscript... :)


###### My Rapid Manual Scan of the day 1 files ######

## Starting with the C lines I identified these mutation sites unique to:

# C1 && C2 (#s indicate which alternation, && indicates shared by C1 and CSC1)
2275 (2276?)

# S1 && S2
1304
1548
2085
2321 low MAF
3071 low MAF
3129

## Then with the S lines (S1, SC1, SCS1, etc.):

# S1 - odd sample lacks all the mutations in S2...
2275
3339
# Is 3339 compensatory? but it also seems to be there in the SCSC time series...
# This seems to be the only Salmonella sample with 2275...

# S2 (identical to other line)
1304
1548
2085
2321
3071
3129

# C1/C2 (again as other line)
2275

###### End of File (for now) ######
